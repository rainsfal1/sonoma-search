services:
  crawler:
    build:
      context: .
      dockerfile: crawler/Dockerfile
    environment:
      - DATABASE_URL=postgres://rainsfall:262912@postgres:5432/search_engine
      - METRICS_URL=http://monitoring:8080
    depends_on:
      - postgres
      - monitoring
    working_dir: /app
    command: ["/app/crawler"]
    networks:
      - crawler_net

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=rainsfall
      - POSTGRES_PASSWORD=262912
      - POSTGRES_DB=search_engine
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./storage/src/scripts:/docker-entrypoint-initdb.d/
    networks:
      - crawler_net

  monitoring:
    build: ./monitoring
    ports:
      - "8080:8080"
    networks:
      - crawler_net
    environment:
      - RUST_LOG=info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./monitoring/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - crawler_net

  grafana:
    image: grafana/grafana:9.5.2
    volumes:
      - ./monitoring/config/grafana/dashboards/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - ./monitoring/config/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitoring/config/grafana/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    ports:
      - "3000:3000"
    networks:
      - crawler_net

volumes:
  postgres_data:

networks:
  crawler_net:
    driver: bridge
