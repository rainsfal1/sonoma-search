name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    - name: Build Docker images
      run: docker compose -f deploy/docker/docker-compose.yml build

  verify-services:
    name: Verify Services
    needs: build-images
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Start services
      run: |
        docker compose -f deploy/docker/docker-compose.yml up -d
        echo "Waiting for services to initialize..."
        sleep 45  # Increased wait time to ensure services are fully up

    - name: Check API Gateway
      run: |
        curl -f http://localhost:8000/api/health || exit 1
        echo "âœ“ API Gateway is up"

    - name: Check Elasticsearch
      run: |
        curl -f http://localhost:9200/_cluster/health || exit 1
        echo "âœ“ Elasticsearch is up"

    - name: Check Prometheus
      run: |
        curl -f http://localhost:9090/-/healthy || exit 1
        echo "âœ“ Prometheus is up"

    - name: Check service metrics
      run: |
        # Check crawler metrics
        curl -f http://localhost:9091/metrics || exit 1
        echo "âœ“ Crawler metrics endpoint is up"
        
        # Check indexer metrics
        curl -f http://localhost:9092/metrics || exit 1
        echo "âœ“ Indexer metrics endpoint is up"
        
        # Check ranker metrics
        curl -f http://localhost:9093/metrics || exit 1
        echo "âœ“ Ranker metrics endpoint is up"

    - name: Show logs on failure
      if: failure()
      run: |
        echo "Service verification failed. Showing logs:"
        docker compose -f deploy/docker/docker-compose.yml logs

    - name: Cleanup services
      if: always()
      run: docker compose -f deploy/docker/docker-compose.yml down -v

  deploy:
    name: Deploy (Mock)
    needs: [verify-services]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy notification
      run: |
        echo "ðŸš€ Build and verification successful!"
        echo "Services ready for deployment:"
        echo "âœ“ API Gateway (Port 8000)"
        echo "âœ“ Crawler Service (Metrics: 9091)"
        echo "âœ“ Indexer Service (Metrics: 9092)"
        echo "âœ“ Ranker Service (Metrics: 9093)"
        echo "âœ“ Elasticsearch (Port 9200)"
        echo "âœ“ Monitoring Stack (Prometheus: 9090, Grafana: 3001)" 
