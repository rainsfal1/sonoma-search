name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Start services with Docker Compose
      run: docker compose -f deploy/docker/docker-compose.yml up -d

    - name: Wait for services to be ready
      run: |
        # Wait for services to be healthy
        for i in {1..30}; do
          if curl -s http://localhost:3000 >/dev/null && \
             curl -s http://localhost:8000/health >/dev/null && \
             curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green"'; then
            echo "All services are ready!"
            exit 0
          fi
          echo "Waiting for services to be ready... ($i/30)"
          sleep 10
        done
        echo "Services failed to become ready in time"
        exit 1

    - name: Run integration tests
      run: |
        # Check web frontend
        curl -f http://localhost:3000 || exit 1
        # Check crawler API
        curl -f http://localhost:8000/health || exit 1
        # Check Elasticsearch
        curl -f http://localhost:9200/_cluster/health || exit 1
        # Check Prometheus metrics endpoints
        curl -f http://localhost:9091/metrics || exit 1  # Crawler metrics
        curl -f http://localhost:9092/metrics || exit 1  # Indexer metrics
        curl -f http://localhost:9093/metrics || exit 1  # Ranker metrics

    - name: Show logs on failure
      if: failure()
      run: docker compose -f deploy/docker/docker-compose.yml logs

    - name: Check formatting
      continue-on-error: true
      run: |
        cargo fmt
        git diff --exit-code || {
          echo "::warning ::Code formatting issues found. Run 'cargo fmt' locally to fix."
          true
        }

    - name: Cleanup
      if: always()
      run: docker compose -f deploy/docker/docker-compose.yml down -v

  deploy:
    name: Deploy (Mock)
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy notification
      run: |
        echo "ðŸš€ Deployment would happen here in a real scenario"
        echo "Services ready to be deployed:"
        echo "- Web Frontend (Port 3000)"
        echo "- Crawler Service (Port 8000)"
        echo "- Indexer Service"
        echo "- Ranker Service"
        echo "- Monitoring Stack (Prometheus:9090, Grafana:3001)" 
