name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  build:
    name: Build Services
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        docker compose version

    - name: Build Docker images
      run: docker compose -f deploy/docker/docker-compose.yml build

  verify-startup:
    name: Verify Service Startup
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Start services
      run: |
        # Start services in detached mode
        docker compose -f deploy/docker/docker-compose.yml up -d
        
        echo "Waiting for services to initialize..."
        sleep 30  # Give services time to initialize
        
        # Verify each service started successfully
        echo "Verifying services..."
        
        # Check web frontend
        curl -f http://localhost:3000 || exit 1
        echo "âœ“ Web frontend is up"
        
        # Check crawler API
        curl -f http://localhost:8000/health || exit 1
        echo "âœ“ Crawler service is up"
        
        # Check Elasticsearch
        curl -f http://localhost:9200/_cluster/health || exit 1
        echo "âœ“ Elasticsearch is up"
        
        # Check metrics endpoints
        curl -f http://localhost:9091/metrics || exit 1  # Crawler metrics
        echo "âœ“ Crawler metrics endpoint is up"
        curl -f http://localhost:9092/metrics || exit 1  # Indexer metrics
        echo "âœ“ Indexer metrics endpoint is up"
        curl -f http://localhost:9093/metrics || exit 1  # Ranker metrics
        echo "âœ“ Ranker metrics endpoint is up"
        
        echo "All services verified successfully!"
        
        # Stop all services
        docker compose -f deploy/docker/docker-compose.yml down

    - name: Show logs on failure
      if: failure()
      run: |
        echo "Service startup verification failed. Showing logs:"
        docker compose -f deploy/docker/docker-compose.yml logs

    - name: Cleanup
      if: always()
      run: docker compose -f deploy/docker/docker-compose.yml down -v

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Check formatting
      run: |
        cargo fmt --all -- --check
        echo "âœ“ Code formatting verified"

  deploy:
    name: Deploy (Mock)
    needs: [build, verify-startup, code-quality]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy notification
      run: |
        echo "ðŸš€ Build and verification successful!"
        echo "Services ready for deployment:"
        echo "âœ“ Web Frontend (Port 3000)"
        echo "âœ“ Crawler Service (Port 8000)"
        echo "âœ“ Indexer Service"
        echo "âœ“ Ranker Service"
        echo "âœ“ Monitoring Stack (Prometheus:9090, Grafana:3001)" 
